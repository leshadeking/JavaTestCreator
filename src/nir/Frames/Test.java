/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nir.Frames;

import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import nir.DataBase.SQL;
import nir.Object.Folder;

/**
 *
 * @author Alexkcey
 */
public class Test extends javax.swing.JFrame {
    /**
     * Creates new form Test
     */
    static SQL sqlReq = new SQL();
    public int counter = 1;
    List<Folder> folders = new ArrayList<Folder>();
    public Test()
    {
        
        initComponents();
        
            Folder fl = new Folder(1);
            
            folders.add(fl);
        System.out.println(folders.get(0));
        
        int i = 0;
        List<String> list = sqlReq.getNames("SELECT Answer_text FROM answers WHERE Quest_id =" + counter);
        while (list.size()>i)
        {
            DML.addElement(list.get(i));
            i++;
        }
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        questionLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        questionLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        questionLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        questionLabel.setText(sqlReq.getStrigSQL("SELECT Quest_text FROM questions WHERE Quest_id =" + counter));
        questionLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jList1.setBackground(new java.awt.Color(204, 204, 204));
        jList1.setBorder(new javax.swing.border.MatteBorder(null));
        jList1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jList1.setModel(DML);
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        jList1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jList1FocusGained(evt);
            }
        });
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(questionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 631, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(questionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
        int temp;
        
        if( !evt.getValueIsAdjusting())
        {    
            if (jList1.getSelectedIndex() != -1) {
            temp = evt.getFirstIndex()+1;
            if(!DML.isEmpty())
            {
                DML.clear();
                questionLabel.setText(sqlReq.getStrigSQL("SELECT Quest_text FROM questions WHERE Quest_id =" + counter));
                int i = 0;
                List<String> list = sqlReq.getNames("SELECT Answer_text FROM answers WHERE Quest_id =" + counter);
                List<Integer> values = sqlReq.getIntL("SELECT Answer_impact FROM answers WHERE Quest_id = "+ counter +" and Answer_id = " + temp);
                List<Integer> graphs = sqlReq.getIntL("SELECT Answer_graph FROM answers WHERE Quest_id = "+ counter +" and Answer_id = " + temp);
                
                while (list.size()>i)
                {
                    DML.addElement(list.get(i));
                    i++;
                }
                counter++;
                jList1.clearSelection();
                 for(int j = 0; j<graphs.size(); j++)
                        if(graphs.get(j)== folders.get(j).id)
                            folders.get(j).value += values.get(j);
                if(DML.isEmpty())
                {
                    String str = "";
                    for(int j = 0; j<folders.size(); j++)
                    {
                        str += folders.get(j).folder_name + ": " + folders.get(j).value + "\0";
                    }
                    FinalPage fin = new FinalPage(str);
                    fin.setVisible(true);
                    System.out.println(folders.get(0).folder_name + ": " + folders.get(0).value);
                    this.setVisible(false);
                    this.dispose();
                }
            }
            }
        }
      
    }//GEN-LAST:event_jList1ValueChanged

    private void jList1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jList1FocusGained
      
    }//GEN-LAST:event_jList1FocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            
            }
        });
    }
    
    DefaultListModel DML = new DefaultListModel();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel questionLabel;
    // End of variables declaration//GEN-END:variables
}
